the most common None use cases:

Default parameters 
Variable initialization
Conditional checking
Function return behavior

# Default parameter - you'll use this pattern constantly
def my_function(value=None):
    if value is None:
        value = "default"

# Basic None checking - fundamental skill
x = None
if x is None:
    print("x has no value")

# Understanding implicit returns - important concept
def do_something():
    print("Hello")
result = do_something()  # result is None

~ When to use None: Optional parameters, uninitialized variables, missing data
~ How to check: Always use is None instead of == None (best practice)
~ Common mistake: Don't confuse None with empty strings "" or zero 0
